pipeline {
    agent any

    environment {
        MAVEN_HOME = "/usr/share/maven"
        M2_HOME = "/usr/share/maven"
        PATH = "/usr/share/maven/bin:/usr/bin:/usr/local/bin:$PATH"
        DB_URL = 'jdbc:postgresql://172.17.0.3:5432/postgres'
        DB_USER = 'postgres'
        DB_PASSWORD = 'postgres'
    }

    triggers {
        githubPush()  // Triggers pipeline on push/merge to GitHub
    }

    stages {
        stage('Check Environment') {
            steps {
                script {
                    sh 'echo "Using Maven from: $MAVEN_HOME"'
                    sh 'whoami'
                    sh 'ls -lah /usr/share/maven/bin'
                    sh 'mvn -version'
                }
            }
        }

        stage('Clone Repository') {
            steps {
                script {
                    sh '''
                        rm -rf bookStore || true
                        git clone --depth=1 -b main https://github.com/asifazam008/bookStore.git
                        cd bookStore
                        echo "‚úÖ Repository cloned successfully"
                    '''
                }
            }
        }

        stage('Build with Maven') {
            steps {
                script {
                    try {
                        sh 'cd bookStore && mvn clean package'
                        echo "‚úÖ Build completed successfully"
                    } catch (Exception e) {
                        error "‚ùå Build failed"
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    try {
                        sh 'cd bookStore && mvn test'
                        echo "‚úÖ Tests passed successfully"
                    } catch (Exception e) {
                        error "‚ùå Tests failed"
                    }
                }
            }
        }

        stage('Stop Existing Application') {
            steps {
                script {
                    sh 'pkill -f bookStore-0.0.1-SNAPSHOT.jar || echo "No existing application running"'
                }
            }
        }

        stage('Deploy Application') {
            steps {
                script {
                    try {
                        sh 'nohup java -jar bookStore/target/bookStore-0.0.1-SNAPSHOT.jar > app.log 2>&1 &'
                        sleep 5  // Give some time for the application to start

                        // Verify if the application is running (using netstat instead of ss)
                        sh 'netstat -tulnp | grep java || echo "‚ö†Ô∏è Application is not running!"'

                        echo "‚úÖ Deployment successful. Application is running at http://127.0.0.1:2008/home"
                    } catch (Exception e) {
                        error "‚ùå Deployment failed"
                    }
                }
            }
        }
    }

    post {
        success {
            echo "üéâ Build SUCCESS! Everything worked fine."
        }
        failure {
            echo "üö® Build FAILED! Check logs for errors."
        }
    }
}
